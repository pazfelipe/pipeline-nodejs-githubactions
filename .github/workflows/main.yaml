name: Testing Actions Environment

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - development

env:
  PROJECT_ID: project1
  GKE_CLUSTER: production # TODO: update with the cluster name
  GKE_ZONE: us-east1-d # TODO: update with the cluster zone
  DEPLOYMENT_NAME: app-angular-ssr # TODO: update with the deployment name
  IMAGE: redesign-angular-ssr
  CLUSTER_ENV: production

jobs:
  generate_labels:
    name: Gerando labels
    runs-on: ubuntu-latest

    steps:
      - name: Criando timestamp
        id: timestamp
        run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H_%M_%S')"

      - name: Gerando nome da imagem
        id: image_name
        run: echo "::set-output name=image::${{ env.IMAGE }}:${{ steps.timestamp.outputs.date }}"

      - name: Gerando url do container
        id: gcr_container
        run: echo "::set-output name=url::gcr.io/${{ env.PROJECT_ID }}/${{ steps.image_name.outputs.image }}"

      - name: Setando ambiente
        id: current_environment
        run: echo "::set-output name=env::gcr.io/${{ env.PROJECT_ID }}/${{ steps.image_name.outputs.image }}"

    outputs:
      timestamp: ${{ steps.timestamp.outputs.date }}
      image: ${{ steps.image_name.outputs.image }}
      gcr_container: ${{ steps.gcr_container.outputs.url }}
      current_environment: ${{ steps.current_environment.outputs.env }}

  test:
    runs-on: ubuntu-latest
    name: Initial configuration and testing

    needs: generate_labels

    strategy:
      matrix:
        node-version: [18.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@master
        with:
          path: ./dist

      # Runs a single command using the runners shell
      - name: Configure NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    name: Build

    needs: test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm run build
          ls -l

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist
          retention-days: 1

  deploy_to_dev:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    name: Deploy application to Dev
    environment: dev

    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Start application
        run: |
          mv dist/artifact/* dist
          rm -rf dist/artifact
          npm run start

  deploy_to_stg:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    name: Deploy application to Staging
    environment: staging

    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Start application
        run: |
          mv dist/artifact/* dist
          rm -rf dist/artifact
          npm run start

  deploy_to_prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy application to Prod
    environment: prod

    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Start application
        run: |
          mv dist/artifact/* dist
          rm -rf dist/artifact
          npm run start

  notify-slack:
    runs-on: ubuntu-latest
    needs: [deploy_to_dev, deploy_to_stg, deploy_to_prod]
    name: Notify Slack
    if: ${{ always() && contains(needs.*.result, 'success') }}

    steps:
      - name: Notify Slack
        run: |
          echo "Deployed to Dev"
          echo "Teste aqui ${{ jobs.generate_labels.outputs.timestamp }}"

  delete_artifacts:
    runs-on: ubuntu-latest
    name: Delete artifacts
    needs: [deploy_to_dev, deploy_to_stg, deploy_to_prod]
    if: ${{ always() && contains(needs.*.result, 'success') }}
    steps:
      - uses: geekyeggo/delete-artifact@v1
